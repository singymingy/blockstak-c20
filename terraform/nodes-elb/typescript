Script started on Tue Nov 17 15:04:59 2020
bash-5.0$ ter[K[K[Kpwd
/Users/hratzs/blockstak-c20/terraform/nodes-elb
bash-5.0$ terraform fmt
bash-5.0$ terraform init

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m
- Checking for available provider plugins...
- Downloading plugin for provider "aws" (hashicorp/aws) 3.15.0...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.aws: version = "~> 3.15"

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
bash-5.0$ terraform plan
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_autoscaling_group.my_asg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "my_asg" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m        = [
          [32m+[0m [0m"ap-southeast-2a",
          [32m+[0m [0m"ap-southeast-2b",
          [32m+[0m [0m"ap-southeast-2c",
        ]
      [32m+[0m [0m[1m[0mdefault_cooldown[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mdesired_capacity[0m[0m          = 8
      [32m+[0m [0m[1m[0mforce_delete[0m[0m              = false
      [32m+[0m [0m[1m[0mhealth_check_grace_period[0m[0m = 300
      [32m+[0m [0m[1m[0mhealth_check_type[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mlaunch_configuration[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mload_balancers[0m[0m            = [
          [32m+[0m [0m"terraform-elb",
        ]
      [32m+[0m [0m[1m[0mmax_size[0m[0m                  = 10
      [32m+[0m [0m[1m[0mmetrics_granularity[0m[0m       = "1Minute"
      [32m+[0m [0m[1m[0mmin_size[0m[0m                  = 6
      [32m+[0m [0m[1m[0mname[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprotect_from_scale_in[0m[0m     = false
      [32m+[0m [0m[1m[0mservice_linked_role_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_zone_identifier[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mwait_for_capacity_timeout[0m[0m = "10m"

      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "Name"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "tf-web-asg"
        }
    }

[1m  # aws_autoscaling_policy.web_asg_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "web_asg_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mmetric_aggregation_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "web_asg_policy"
      [32m+[0m [0m[1m[0mpolicy_type[0m[0m             = "TargetTrackingScaling"

      [32m+[0m [0mtarget_tracking_configuration {
          [32m+[0m [0m[1m[0mdisable_scale_in[0m[0m = false
          [32m+[0m [0m[1m[0mtarget_value[0m[0m     = 60

          [32m+[0m [0mpredefined_metric_specification {
              [32m+[0m [0m[1m[0mpredefined_metric_type[0m[0m = "ASGAverageCPUUtilization"
            }
        }
    }

[1m  # aws_elb.web_elb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_elb" "web_elb" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m          = [
          [32m+[0m [0m"ap-southeast-2a",
          [32m+[0m [0m"ap-southeast-2b",
          [32m+[0m [0m"ap-southeast-2c",
        ]
      [32m+[0m [0m[1m[0mconnection_draining[0m[0m         = false
      [32m+[0m [0m[1m[0mconnection_draining_timeout[0m[0m = 300
      [32m+[0m [0m[1m[0mcross_zone_load_balancing[0m[0m   = true
      [32m+[0m [0m[1m[0mdns_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0midle_timeout[0m[0m                = 60
      [32m+[0m [0m[1m[0minstances[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minternal[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                        = "terraform-elb"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msource_security_group[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mzone_id[0m[0m                     = (known after apply)

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = 2
          [32m+[0m [0m[1m[0minterval[0m[0m            = 30
          [32m+[0m [0m[1m[0mtarget[0m[0m              = "HTTP:20443/v2/info"
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = 3
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = 2
        }

      [32m+[0m [0mlistener {
          [32m+[0m [0m[1m[0minstance_port[0m[0m     = 20443
          [32m+[0m [0m[1m[0minstance_protocol[0m[0m = "http"
          [32m+[0m [0m[1m[0mlb_port[0m[0m           = 80
          [32m+[0m [0m[1m[0mlb_protocol[0m[0m       = "http"
        }
    }

[1m  # aws_launch_configuration.my-asg-launch-conf[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_configuration" "my-asg-launch-conf" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m = false
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0menable_monitoring[0m[0m           = true
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m                    = "ami-0260047fd6ea07d0d"
      [32m+[0m [0m[1m[0minstance_type[0m[0m               = "t2.micro"
      [32m+[0m [0m[1m[0mkey_name[0m[0m                    = "tf-aws"
      [32m+[0m [0m[1m[0mname[0m[0m                        = "blockstack-nodes"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                   = "c644898cf1d83f4dd22d0c8184cc95333520fc95"

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # aws_security_group.nodes_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "nodes_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Allow p2p traffic from internet and ssh / web from myIP"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "p2p port - 20444 access from internet"
              [32m+[0m [0mfrom_port        = 20444
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 20444
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"113.197.96.228/32",
                ]
              [32m+[0m [0mdescription      = "Lb web port  access from myIP"
              [32m+[0m [0mfrom_port        = 80
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 80
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"113.197.96.228/32",
                ]
              [32m+[0m [0mdescription      = "port 22 from myIP"
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"172.31.0.0/16",
                ]
              [32m+[0m [0mdescription      = "port 20443 - access within lb local subnet"
              [32m+[0m [0mfrom_port        = 20443
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 20443
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = "Access Policy"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "nodes_sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[0m[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

bash-5.0$ terraform apply

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_autoscaling_group.my_asg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "my_asg" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m        = [
          [32m+[0m [0m"ap-southeast-2a",
          [32m+[0m [0m"ap-southeast-2b",
          [32m+[0m [0m"ap-southeast-2c",
        ]
      [32m+[0m [0m[1m[0mdefault_cooldown[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mdesired_capacity[0m[0m          = 8
      [32m+[0m [0m[1m[0mforce_delete[0m[0m              = false
      [32m+[0m [0m[1m[0mhealth_check_grace_period[0m[0m = 300
      [32m+[0m [0m[1m[0mhealth_check_type[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mlaunch_configuration[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mload_balancers[0m[0m            = [
          [32m+[0m [0m"terraform-elb",
        ]
      [32m+[0m [0m[1m[0mmax_size[0m[0m                  = 10
      [32m+[0m [0m[1m[0mmetrics_granularity[0m[0m       = "1Minute"
      [32m+[0m [0m[1m[0mmin_size[0m[0m                  = 6
      [32m+[0m [0m[1m[0mname[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprotect_from_scale_in[0m[0m     = false
      [32m+[0m [0m[1m[0mservice_linked_role_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_zone_identifier[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mwait_for_capacity_timeout[0m[0m = "10m"

      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "Name"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "tf-web-asg"
        }
    }

[1m  # aws_autoscaling_policy.web_asg_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "web_asg_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mmetric_aggregation_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "web_asg_policy"
      [32m+[0m [0m[1m[0mpolicy_type[0m[0m             = "TargetTrackingScaling"

      [32m+[0m [0mtarget_tracking_configuration {
          [32m+[0m [0m[1m[0mdisable_scale_in[0m[0m = false
          [32m+[0m [0m[1m[0mtarget_value[0m[0m     = 60

          [32m+[0m [0mpredefined_metric_specification {
              [32m+[0m [0m[1m[0mpredefined_metric_type[0m[0m = "ASGAverageCPUUtilization"
            }
        }
    }

[1m  # aws_elb.web_elb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_elb" "web_elb" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m          = [
          [32m+[0m [0m"ap-southeast-2a",
          [32m+[0m [0m"ap-southeast-2b",
          [32m+[0m [0m"ap-southeast-2c",
        ]
      [32m+[0m [0m[1m[0mconnection_draining[0m[0m         = false
      [32m+[0m [0m[1m[0mconnection_draining_timeout[0m[0m = 300
      [32m+[0m [0m[1m[0mcross_zone_load_balancing[0m[0m   = true
      [32m+[0m [0m[1m[0mdns_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0midle_timeout[0m[0m                = 60
      [32m+[0m [0m[1m[0minstances[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minternal[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                        = "terraform-elb"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msource_security_group[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mzone_id[0m[0m                     = (known after apply)

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = 2
          [32m+[0m [0m[1m[0minterval[0m[0m            = 30
          [32m+[0m [0m[1m[0mtarget[0m[0m              = "HTTP:20443/v2/info"
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = 3
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = 2
        }

      [32m+[0m [0mlistener {
          [32m+[0m [0m[1m[0minstance_port[0m[0m     = 20443
          [32m+[0m [0m[1m[0minstance_protocol[0m[0m = "http"
          [32m+[0m [0m[1m[0mlb_port[0m[0m           = 80
          [32m+[0m [0m[1m[0mlb_protocol[0m[0m       = "http"
        }
    }

[1m  # aws_launch_configuration.my-asg-launch-conf[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_configuration" "my-asg-launch-conf" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m = false
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0menable_monitoring[0m[0m           = true
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m                    = "ami-0260047fd6ea07d0d"
      [32m+[0m [0m[1m[0minstance_type[0m[0m               = "t2.micro"
      [32m+[0m [0m[1m[0mkey_name[0m[0m                    = "tf-aws"
      [32m+[0m [0m[1m[0mname[0m[0m                        = "blockstack-nodes"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                   = "c644898cf1d83f4dd22d0c8184cc95333520fc95"

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # aws_security_group.nodes_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "nodes_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Allow p2p traffic from internet and ssh / web from myIP"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "p2p port - 20444 access from internet"
              [32m+[0m [0mfrom_port        = 20444
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 20444
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"113.197.96.228/32",
                ]
              [32m+[0m [0mdescription      = "Lb web port  access from myIP"
              [32m+[0m [0mfrom_port        = 80
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 80
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"113.197.96.228/32",
                ]
              [32m+[0m [0mdescription      = "port 22 from myIP"
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"172.31.0.0/16",
                ]
              [32m+[0m [0mdescription      = "port 20443 - access within lb local subnet"
              [32m+[0m [0mfrom_port        = 20443
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 20443
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = "Access Policy"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "nodes_sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[0m[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.[0m

[0m[1mDo you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0myes

[0m[1maws_security_group.nodes_sg: Creating...[0m[0m
[0m[1maws_security_group.nodes_sg: Creation complete after 2s [id=sg-0a42b232da77e071a][0m[0m
[0m[1maws_launch_configuration.my-asg-launch-conf: Creating...[0m[0m
[0m[1maws_elb.web_elb: Creating...[0m[0m
[0m[1maws_launch_configuration.my-asg-launch-conf: Creation complete after 1s [id=blockstack-nodes][0m[0m
[0m[1maws_elb.web_elb: Creation complete after 6s [id=terraform-elb][0m[0m
[0m[1maws_autoscaling_group.my_asg: Creating...[0m[0m
[0m[1maws_autoscaling_group.my_asg: Still creating... [10s elapsed][0m[0m
[0m[1maws_autoscaling_group.my_asg: Still creating... [20s elapsed][0m[0m
[0m[1maws_autoscaling_group.my_asg: Still creating... [30s elapsed][0m[0m
[0m[1maws_autoscaling_group.my_asg: Creation complete after 39s [id=tf-asg-20201117020554703700000001][0m[0m
[0m[1maws_autoscaling_policy.web_asg_policy: Creating...[0m[0m
[0m[1maws_autoscaling_policy.web_asg_policy: Creation complete after 1s [id=web_asg_policy][0m[0m
[0m[1m[32m
Apply complete! Resources: 5 added, 0 changed, 0 destroyed.[0m
[0m[1m[32m
Outputs:

elb_dns_name = [
  "terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com",
][0m
bash-5.0$ terraform shw[Kow
[0m# aws_autoscaling_group.my_asg:
resource "aws_autoscaling_group" "my_asg" {
    [1m[0marn[0m[0m                       = "arn:aws:autoscaling:ap-southeast-2:007421384487:autoScalingGroup:93a28ea0-bcb1-492d-99aa-185152b63fae:autoScalingGroupName/tf-asg-20201117020554703700000001"
    [1m[0mavailability_zones[0m[0m        = [
        "ap-southeast-2a",
        "ap-southeast-2b",
        "ap-southeast-2c",
    ]
    [1m[0mdefault_cooldown[0m[0m          = 300
    [1m[0mdesired_capacity[0m[0m          = 8
    [1m[0mforce_delete[0m[0m              = false
    [1m[0mhealth_check_grace_period[0m[0m = 300
    [1m[0mhealth_check_type[0m[0m         = "EC2"
    [1m[0mid[0m[0m                        = "tf-asg-20201117020554703700000001"
    [1m[0mlaunch_configuration[0m[0m      = "blockstack-nodes"
    [1m[0mload_balancers[0m[0m            = [
        "terraform-elb",
    ]
    [1m[0mmax_instance_lifetime[0m[0m     = 0
    [1m[0mmax_size[0m[0m                  = 10
    [1m[0mmetrics_granularity[0m[0m       = "1Minute"
    [1m[0mmin_size[0m[0m                  = 6
    [1m[0mname[0m[0m                      = "tf-asg-20201117020554703700000001"
    [1m[0mprotect_from_scale_in[0m[0m     = false
    [1m[0mservice_linked_role_arn[0m[0m   = "arn:aws:iam::007421384487:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
    [1m[0mvpc_zone_identifier[0m[0m       = []
    [1m[0mwait_for_capacity_timeout[0m[0m = "10m"

    tag {
        [1m[0mkey[0m[0m                 = "Name"
        [1m[0mpropagate_at_launch[0m[0m = true
        [1m[0mvalue[0m[0m               = "tf-web-asg"
    }
}

# aws_autoscaling_policy.web_asg_policy:
resource "aws_autoscaling_policy" "web_asg_policy" {
    [1m[0marn[0m[0m                       = "arn:aws:autoscaling:ap-southeast-2:007421384487:scalingPolicy:228faadc-da01-4a10-b18d-6179a29b6d27:autoScalingGroupName/tf-asg-20201117020554703700000001:policyName/web_asg_policy"
    [1m[0mautoscaling_group_name[0m[0m    = "tf-asg-20201117020554703700000001"
    [1m[0mcooldown[0m[0m                  = 0
    [1m[0mestimated_instance_warmup[0m[0m = 0
    [1m[0mid[0m[0m                        = "web_asg_policy"
    [1m[0mname[0m[0m                      = "web_asg_policy"
    [1m[0mpolicy_type[0m[0m               = "TargetTrackingScaling"
    [1m[0mscaling_adjustment[0m[0m        = 0

    target_tracking_configuration {
        [1m[0mdisable_scale_in[0m[0m = false
        [1m[0mtarget_value[0m[0m     = 60

        predefined_metric_specification {
            [1m[0mpredefined_metric_type[0m[0m = "ASGAverageCPUUtilization"
        }
    }
}

# aws_elb.web_elb:
resource "aws_elb" "web_elb" {
    [1m[0marn[0m[0m                         = "arn:aws:elasticloadbalancing:ap-southeast-2:007421384487:loadbalancer/terraform-elb"
    [1m[0mavailability_zones[0m[0m          = [
        "ap-southeast-2a",
        "ap-southeast-2b",
        "ap-southeast-2c",
    ]
    [1m[0mconnection_draining[0m[0m         = false
    [1m[0mconnection_draining_timeout[0m[0m = 300
    [1m[0mcross_zone_load_balancing[0m[0m   = true
    [1m[0mdns_name[0m[0m                    = "terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com"
    [1m[0mid[0m[0m                          = "terraform-elb"
    [1m[0midle_timeout[0m[0m                = 60
    [1m[0minstances[0m[0m                   = []
    [1m[0minternal[0m[0m                    = false
    [1m[0mname[0m[0m                        = "terraform-elb"
    [1m[0msecurity_groups[0m[0m             = [
        "sg-0a42b232da77e071a",
    ]
    [1m[0msource_security_group[0m[0m       = "007421384487/Access Policy"
    [1m[0msource_security_group_id[0m[0m    = "sg-0a42b232da77e071a"
    [1m[0msubnets[0m[0m                     = [
        "subnet-876e97e3",
        "subnet-8e35d8d7",
        "subnet-ae36d3d8",
    ]
    [1m[0mzone_id[0m[0m                     = "Z1GM3OXH4ZPM65"

    health_check {
        [1m[0mhealthy_threshold[0m[0m   = 2
        [1m[0minterval[0m[0m            = 30
        [1m[0mtarget[0m[0m              = "HTTP:20443/v2/info"
        [1m[0mtimeout[0m[0m             = 3
        [1m[0munhealthy_threshold[0m[0m = 2
    }

    listener {
        [1m[0minstance_port[0m[0m     = 20443
        [1m[0minstance_protocol[0m[0m = "http"
        [1m[0mlb_port[0m[0m           = 80
        [1m[0mlb_protocol[0m[0m       = "http"
    }
}

# aws_launch_configuration.my-asg-launch-conf:
resource "aws_launch_configuration" "my-asg-launch-conf" {
    [1m[0marn[0m[0m                         = "arn:aws:autoscaling:ap-southeast-2:007421384487:launchConfiguration:4c729d26-e6b2-4c0d-b680-10b78ad72c32:launchConfigurationName/blockstack-nodes"
    [1m[0massociate_public_ip_address[0m[0m = false
    [1m[0mebs_optimized[0m[0m               = false
    [1m[0menable_monitoring[0m[0m           = true
    [1m[0mid[0m[0m                          = "blockstack-nodes"
    [1m[0mimage_id[0m[0m                    = "ami-0260047fd6ea07d0d"
    [1m[0minstance_type[0m[0m               = "t2.micro"
    [1m[0mkey_name[0m[0m                    = "tf-aws"
    [1m[0mname[0m[0m                        = "blockstack-nodes"
    [1m[0msecurity_groups[0m[0m             = [
        "sg-0a42b232da77e071a",
    ]
    [1m[0muser_data[0m[0m                   = "c644898cf1d83f4dd22d0c8184cc95333520fc95"
}

# aws_security_group.nodes_sg:
resource "aws_security_group" "nodes_sg" {
    [1m[0marn[0m[0m                    = "arn:aws:ec2:ap-southeast-2:007421384487:security-group/sg-0a42b232da77e071a"
    [1m[0mdescription[0m[0m            = "Allow p2p traffic from internet and ssh / web from myIP"
    [1m[0megress[0m[0m                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = ""
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    [1m[0mid[0m[0m                     = "sg-0a42b232da77e071a"
    [1m[0mingress[0m[0m                = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = "p2p port - 20444 access from internet"
            from_port        = 20444
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 20444
        },
        {
            cidr_blocks      = [
                "113.197.96.228/32",
            ]
            description      = "Lb web port  access from myIP"
            from_port        = 80
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 80
        },
        {
            cidr_blocks      = [
                "113.197.96.228/32",
            ]
            description      = "port 22 from myIP"
            from_port        = 22
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 22
        },
        {
            cidr_blocks      = [
                "172.31.0.0/16",
            ]
            description      = "port 20443 - access within lb local subnet"
            from_port        = 20443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 20443
        },
    ]
    [1m[0mname[0m[0m                   = "Access Policy"
    [1m[0mowner_id[0m[0m               = "007421384487"
    [1m[0mrevoke_rules_on_delete[0m[0m = false
    [1m[0mtags[0m[0m                   = {
        "Name" = "nodes_sg"
    }
    [1m[0mvpc_id[0m[0m                 = "vpc-abcaf4ce"
}


Outputs:

elb_dns_name = [
    "terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com",
][0m[0m
bash-5.0$ cu[K[Kcurl http://terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com/v2/info
{"peer_version":385875968,"pox_consensus":"72f360c486b1a400f15ad336fb43d24793b12024","burn_block_height":120,"stable_pox_consensus":"67fe9d3c2b834f5fc7af55fd2e29cafbd06580bc","stable_burn_block_height":119,"server_version":"blockstack-core 0.0.1 => 23.0.0.0 (, release build, linux [x86_64])","network_id":2147483648,"parent_network_id":3669344250,"stacks_tip_height":0,"stacks_tip":"0000000000000000000000000000000000000000000000000000000000000000","stacks_tip_consensus_hash":"0000000000000000000000000000000000000000","unanchored_tip":"4ec7ae4a471502547f69ff7165ce5eab0257def1a6607770512fb66e5fcc7e79","exit_at_block_height":5130}bash-5.0$ curl http://terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com/v2/info
{"peer_version":385875968,"pox_consensus":"72f360c486b1a400f15ad336fb43d24793b12024","burn_block_height":120,"stable_pox_consensus":"67fe9d3c2b834f5fc7af55fd2e29cafbd06580bc","stable_burn_block_height":119,"server_version":"blockstack-core 0.0.1 => 23.0.0.0 (, release build, linux [x86_64])","network_id":2147483648,"parent_network_id":3669344250,"stacks_tip_height":0,"stacks_tip":"0000000000000000000000000000000000000000000000000000000000000000","stacks_tip_consensus_hash":"0000000000000000000000000000000000000000","unanchored_tip":"4ec7ae4a471502547f69ff7165ce5eab0257def1a6607770512fb66e5fcc7e79","exit_at_block_height":5130}bash-5.0$ curl http://terraform-elb-323888961.ap-southeast-2.elb.amazonaws.com/v2/info
{"peer_version":385875968,"pox_consensus":"72f360c486b1a400f15ad336fb43d24793b12024","burn_block_height":120,"stable_pox_consensus":"67fe9d3c2b834f5fc7af55fd2e29cafbd06580bc","stable_burn_block_height":119,"server_version":"blockstack-core 0.0.1 => 23.0.0.0 (, release build, linux [x86_64])","network_id":2147483648,"parent_network_id":3669344250,"stacks_tip_height":0,"stacks_tip":"0000000000000000000000000000000000000000000000000000000000000000","stacks_tip_consensus_hash":"0000000000000000000000000000000000000000","unanchored_tip":"4ec7ae4a471502547f69ff7165ce5eab0257def1a6607770512fb66e5fcc7e79","exit_at_block_height":5130}bash-5.0$ exit
exit

Script done on Tue Nov 17 15:08:03 2020
